// Code generated by protoc-gen-go. DO NOT EDIT.
// source: light.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//武汉肺炎加油
type AddTagRequest struct {
	OpenId               string   `protobuf:"bytes,1,opt,name=openId,proto3" json:"openId,omitempty"`
	TypeName             string   `protobuf:"bytes,2,opt,name=typeName,proto3" json:"typeName,omitempty"`
	Qrcode               string   `protobuf:"bytes,3,opt,name=qrcode,proto3" json:"qrcode,omitempty"`
	Pos                  string   `protobuf:"bytes,4,opt,name=pos,proto3" json:"pos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddTagRequest) Reset()         { *m = AddTagRequest{} }
func (m *AddTagRequest) String() string { return proto.CompactTextString(m) }
func (*AddTagRequest) ProtoMessage()    {}
func (*AddTagRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_52a2a057aca8f800, []int{0}
}

func (m *AddTagRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddTagRequest.Unmarshal(m, b)
}
func (m *AddTagRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddTagRequest.Marshal(b, m, deterministic)
}
func (m *AddTagRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddTagRequest.Merge(m, src)
}
func (m *AddTagRequest) XXX_Size() int {
	return xxx_messageInfo_AddTagRequest.Size(m)
}
func (m *AddTagRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddTagRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddTagRequest proto.InternalMessageInfo

func (m *AddTagRequest) GetOpenId() string {
	if m != nil {
		return m.OpenId
	}
	return ""
}

func (m *AddTagRequest) GetTypeName() string {
	if m != nil {
		return m.TypeName
	}
	return ""
}

func (m *AddTagRequest) GetQrcode() string {
	if m != nil {
		return m.Qrcode
	}
	return ""
}

func (m *AddTagRequest) GetPos() string {
	if m != nil {
		return m.Pos
	}
	return ""
}

type AddTagResponse struct {
	Imgurl               string   `protobuf:"bytes,1,opt,name=imgurl,proto3" json:"imgurl,omitempty"`
	Shareimgurl          string   `protobuf:"bytes,2,opt,name=shareimgurl,proto3" json:"shareimgurl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddTagResponse) Reset()         { *m = AddTagResponse{} }
func (m *AddTagResponse) String() string { return proto.CompactTextString(m) }
func (*AddTagResponse) ProtoMessage()    {}
func (*AddTagResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_52a2a057aca8f800, []int{1}
}

func (m *AddTagResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddTagResponse.Unmarshal(m, b)
}
func (m *AddTagResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddTagResponse.Marshal(b, m, deterministic)
}
func (m *AddTagResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddTagResponse.Merge(m, src)
}
func (m *AddTagResponse) XXX_Size() int {
	return xxx_messageInfo_AddTagResponse.Size(m)
}
func (m *AddTagResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddTagResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddTagResponse proto.InternalMessageInfo

func (m *AddTagResponse) GetImgurl() string {
	if m != nil {
		return m.Imgurl
	}
	return ""
}

func (m *AddTagResponse) GetShareimgurl() string {
	if m != nil {
		return m.Shareimgurl
	}
	return ""
}

func init() {
	proto.RegisterType((*AddTagRequest)(nil), "protos.addTagRequest")
	proto.RegisterType((*AddTagResponse)(nil), "protos.addTagResponse")
}

func init() { proto.RegisterFile("light.proto", fileDescriptor_52a2a057aca8f800) }

var fileDescriptor_52a2a057aca8f800 = []byte{
	// 201 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0xc9, 0x4c, 0xcf,
	0x28, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x03, 0x53, 0xc5, 0x4a, 0xb9, 0x5c, 0xbc,
	0x89, 0x29, 0x29, 0x21, 0x89, 0xe9, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x62, 0x5c,
	0x6c, 0xf9, 0x05, 0xa9, 0x79, 0x9e, 0x29, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x50, 0x9e,
	0x90, 0x14, 0x17, 0x47, 0x49, 0x65, 0x41, 0xaa, 0x5f, 0x62, 0x6e, 0xaa, 0x04, 0x13, 0x58, 0x06,
	0xce, 0x07, 0xe9, 0x29, 0x2c, 0x4a, 0xce, 0x4f, 0x49, 0x95, 0x60, 0x86, 0xe8, 0x81, 0xf0, 0x84,
	0x04, 0xb8, 0x98, 0x0b, 0xf2, 0x8b, 0x25, 0x58, 0xc0, 0x82, 0x20, 0xa6, 0x92, 0x17, 0x17, 0x1f,
	0xcc, 0xba, 0xe2, 0x82, 0xfc, 0xbc, 0x62, 0xb0, 0xde, 0xcc, 0xdc, 0xf4, 0xd2, 0xa2, 0x1c, 0x98,
	0x7d, 0x10, 0x9e, 0x90, 0x02, 0x17, 0x77, 0x71, 0x46, 0x62, 0x51, 0x2a, 0x54, 0x12, 0x62, 0x25,
	0xb2, 0x90, 0x91, 0x27, 0x17, 0x8f, 0x0f, 0xc8, 0x47, 0xc1, 0xa9, 0x45, 0x65, 0x99, 0xc9, 0xa9,
	0x42, 0x96, 0x5c, 0x6c, 0x10, 0xb3, 0x85, 0x44, 0x21, 0x9e, 0x2c, 0xd6, 0x43, 0xf1, 0x9a, 0x94,
	0x18, 0xba, 0x30, 0xc4, 0x09, 0x4a, 0x0c, 0x49, 0x90, 0xd0, 0x30, 0x06, 0x04, 0x00, 0x00, 0xff,
	0xff, 0x81, 0x3e, 0x73, 0x78, 0x23, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LightServiceClient is the client API for LightService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LightServiceClient interface {
	AddTag(ctx context.Context, in *AddTagRequest, opts ...grpc.CallOption) (*AddTagResponse, error)
}

type lightServiceClient struct {
	cc *grpc.ClientConn
}

func NewLightServiceClient(cc *grpc.ClientConn) LightServiceClient {
	return &lightServiceClient{cc}
}

func (c *lightServiceClient) AddTag(ctx context.Context, in *AddTagRequest, opts ...grpc.CallOption) (*AddTagResponse, error) {
	out := new(AddTagResponse)
	err := c.cc.Invoke(ctx, "/protos.LightService/addTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LightServiceServer is the server API for LightService service.
type LightServiceServer interface {
	AddTag(context.Context, *AddTagRequest) (*AddTagResponse, error)
}

// UnimplementedLightServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLightServiceServer struct {
}

func (*UnimplementedLightServiceServer) AddTag(ctx context.Context, req *AddTagRequest) (*AddTagResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddTag not implemented")
}

func RegisterLightServiceServer(s *grpc.Server, srv LightServiceServer) {
	s.RegisterService(&_LightService_serviceDesc, srv)
}

func _LightService_AddTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LightServiceServer).AddTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.LightService/AddTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LightServiceServer).AddTag(ctx, req.(*AddTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LightService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.LightService",
	HandlerType: (*LightServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "addTag",
			Handler:    _LightService_AddTag_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "light.proto",
}
